# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
        node-version: 14.x
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ env.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

    - name: Test printing your secret
    #- shell: bash
      env:
        SUPER_SECRET: ${{ secrets.SuperSecret }}
    - run: echo "%SUPER_SECRET%"

  # - name: powerplatform-actions
  #    uses: microsoft/powerplatform-actions@v0.8.1
  #    with:
  #      # URL of Power Platform environment to connect with; e.g. "https://test-env.crm.dynamics.com"
  #     environment-url: https://test-env.crm.dynamics.com
  #      # Power Platform user name to authenticate with, e.g. myname@my-org.onmicrosoft.com. Setting this input makes user-name and password required; specifying alternate "app-id" credential set of inputs will result in an error.
  #      user-name: talv@my-org.onmicrosoft.com
  #      # Power Platform password, required if authenticating with username. Do NOT checkin password, instead create a secret and reference it here with: see: https://help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets#using-encrypted-secrets-in-a-workflow
  #      password-secret: ${{ secrets.PASSWORD }}
        
